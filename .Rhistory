library(devtools)
devtools::document()
data,frame(col_1 = character(0))
data.frame(col_1 = character(0))
a <- data.frame(col_1 = character(0))
a
a <- data.frame(col_1 = NA_character_)
a
devtools::document()
args(read.csv)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("C:/Custom R Packages/wrappr/R/get_cache_or_create.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
stop("hello")
devtools::check()
devtools::document()
devtools::check()
data.frame(a = NA_character_)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(devtools)
devtools::test()
getwd()
args(read.csv)
devtools::test()
getwd()
devtools::test()
cwd_before_tests <- getwd()
test_working_directory <- paste0(cwd_before_tests, "/tests/testthat/folder_files_for_tests/")
devtools::test()
args(read.csv)
devtools::test()
devtools::test()
devtools::test()
return_value_from_wrappr_call <- wrappr::use_temp_wd(
temp_cwd = test_working_directory,
func = read.csv,
file = file_name_to_load_in_test_folder_comma_sep_with_header
)
type(data.frame)
class(data.frame())
devtools::test()
devtools::test()
devtools::test()
devtools::test()
source("C:/Custom R Packages/wrappr/tests/testthat/test_use_temp_wd.R")
devtools::test()
devtools::build()
getwd()
cwd_before_tests <- getwd()
test_working_directory <- paste0(cwd_before_tests, "/folder_files_for_tests/")
file_name_to_load_in_test_folder_comma_sep_with_header <- "csv_file_to_load_with_header.csv"
a <- wrappr::use_temp_wd(
temp_cwd = test_working_directory,
func = read.csv,
file = file_name_to_load_in_test_folder_comma_sep_with_header
)
use_temp_wd(
temp_cwd = test_working_directory,
func = read.csv,
file = file_name_to_load_in_test_folder_comma_sep_with_header
)
test_working_directory
devtools::test()
use_temp_wd(
temp_cwd = test_working_directory,
func = read.csv,
file = file_name_to_load_in_test_folder_comma_sep_with_header
)
cwd_before_tests <- getwd()
test_working_directory <- paste0(cwd_before_tests, "/folder_files_for_tests/")
file_name_to_load_in_test_folder_comma_sep_with_header <- "csv_file_to_load_with_header.csv"
file_name_to_load_in_test_folder_not_comma_sep_without_header <- "csv_tab_file_to_load_without_header.csv"
use_temp_wd(
temp_cwd = test_working_directory,
func = read.csv,
file = file_name_to_load_in_test_folder_comma_sep_with_header
)
test_working_directory
test_folders <- "C:/Custom R Packages/wrappr/tests/testthat/folder_files_for_tests"
example <- use_temp_wd(
temp_cwd = test_folders,
func = read.csv,
file = file_name_to_load_in_test_folder_comma_sep_with_header
)
class(example)
expect_type(example, "data.frame")
expect_s3_class(example, "data.frame")
devtools::test()
View(example)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
a <- wrappr::use_temp_wd(
temp_cwd = test_folders,
func = read.csv,
file = file_name_to_load_in_test_folder_not_comma_sep_without_header,
header = FALSE,
col.names = c("col1", "col2", "col3"),
sep = "|"
)
View(a)
devtools::test()
args(read.delim)
devtools::test()
devtools::test()
devtools::check()
devtools::check()
devtools::check()
devtools::test()
devtools::check()
devtools::test()
sum(1,2)
?msg_wrap
devtools::document()
?msg_wrap
devtools::test()
args(sum)
source("C:/Custom R Packages/wrappr/tests/testthat/test_msg_wrap.R")
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
capture.output(print("hello"))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(devtools)
devtools::test()
library(devtools)
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
devtools::build()
a <- get_cache_or_create("a", c, 1)
b <- get_cache_or_create("a", c, 2)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::test()
devtools::test()
devtools::test()
source("C:/Custom R Packages/wrappr/tests/testthat/test_get_cache_or_create.R")
.GlobalEnv
args(exists)
exists
devtools::build()
devtools::test()
devtools::test()
devtools::test()
source("~/.active-rstudio-document")
devtools::test()
devtools::build()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
identical
devtools::test()
devtools::test()
devtools::document()
Initial release.
- Initial release.
devtools::build_readme()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
package(devtools)
library(devtools)
devtools::check()
class(.GlobalEnv)
devtools::check()
devtools::check()
usethis::use_github_action("check-standard")
usethis::use_github_action("check-release")
usethis::use_github_action("test-coverage")
debugSource("C:/Custom R Packages/wrappr/R/iter_library.R")
source("C:/Custom R Packages/wrappr/R/iter_library.R")
args(library)
args(install.packages)
library(devtools)
devtools::check()
devtools::check()
source("C:/Custom R Packages/wrappr/R/iter_library.R")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
?iter_library
devtools::check()
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
View(a)
View(a)
a
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
args(read.csv)
elseif
ifelse
ifelse(TRUE, print(sum(1,2,3)), print("wrongs"))
ifelse(TRUE, print(sum(1,2,3)), print("wrongs"))
ifelse(FALSE, print(sum(1,2,3)), print("wrongs"))
a <- ifelse(FALSE, sum(1,2,3), print("wrongs"))
a
a
devtools::check()
devtools::check()
devtools::check()
library(devtools)
devtools::check()
inherits(sim)
inherits(sum)
inherits("sum")
is("sum")
is(sum)
is(sum) == "function"
is(sum)[0] == "function"
is(sum)[1] == "function"
devtools::check()
devtools::check()
devtools::check()
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
devtools::check()
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(devtools)
devtools::check()
devtools::test()
devtools::test()
inherits(sim)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
mean(1,2,3,4,7,8,9)
mean(c(1,2,3,4,7,8,9))
mean(1,2,3,4,7,8,9)
range(1,2,3)
range(1,2,3)[1]
devtools::test()
devtools::test()
devtools::test()
devtools::check()
deparse(sum)
deparse(function() {})
deparse(function() {})
deparse(substitute())
deparse(substitute(sum))
deparse(substitute(function() {}))
deparse(substitute(function() {}))[2]
paste0(deparse(substitute(function() {})))
paste0(deparse(substitute(function() {})))[1]
paste0(deparse(substitute(function() {})), collaps = "")
paste0(deparse(substitute(function() {})), collaps = "")
paste0(deparse(substitute(function() {})), collaps = "")[2]
a <- deparse(substitute(function() {}))
paste0(a, collapse = "")
paste0(deparse(substitute(function() {})), collapse = "")
args(warning)
devtools::test()
a <- sum
deparse(a)
deparse(a)[2]
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
class(c(c(1,2,3),c(2,3)))
c(c(1,2,3),c(2,3))
devtools::test()
unlist(c(1,2,3))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
a <- lazy_eval(1,2,3, .f = sum)
a()
a <- a(NA, return_new_closure = TRUE)
a()
a
a()
a(na.rm = TRUE)
a <- a(na.rm = TRUE, return_new_closure = TRUE)
a()
a
list(na.rm = TRUE)
unlist(list(na.rm = TRUE))
unlist(list(na.rm = TRUE, 1))
unlist(list(na.rm = TRUE, 1,2,3))
devtools::test()
is.list(list())
devtools::test()
devtools::test()
devtools::test()
sum(list(1,2,3))
devtools::test()
devtools::test()
unlist(list(1,"e", sum), recursive = FALSE)
devtools::test()
devtools::build()
a <- lazy_eval(1,2,3, sum)
a <- lazy_eval(1,2,3, .f = sum)
a()
a(NA, na.rm = TRUE)
a(NA, na.rm = TRUE)
a <- a(NA, na.rm = TRUE, return_new_closure = TRUE)
a()
a(na.rm = TRUE)
list(list(1))
b <- function(...) {print(is.list(...))}
b()
b(1)
b(list(1))
b <- function(...) {b <- ... b}
b <- function(...) {b <- ...}
b(1)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::check()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
expect_warning(warning("hello"))
expect_warning(warning("hello"))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
devtools::test()
args(install.packages)
devtools::check()
devtools::test()
devtools::test()
rownames(available.packages())
devtools::test()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
