?msg_wrap
devtools::document()
?msg_wrap
devtools::test()
args(sum)
source("C:/Custom R Packages/wrappr/tests/testthat/test_msg_wrap.R")
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
capture.output(print("hello"))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(devtools)
devtools::test()
library(devtools)
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
devtools::build()
a <- get_cache_or_create("a", c, 1)
b <- get_cache_or_create("a", c, 2)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::test()
devtools::test()
devtools::test()
source("C:/Custom R Packages/wrappr/tests/testthat/test_get_cache_or_create.R")
.GlobalEnv
args(exists)
exists
devtools::build()
devtools::test()
devtools::test()
devtools::test()
source("~/.active-rstudio-document")
devtools::test()
devtools::build()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
identical
devtools::test()
devtools::test()
devtools::document()
Initial release.
- Initial release.
devtools::build_readme()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
package(devtools)
library(devtools)
devtools::check()
class(.GlobalEnv)
devtools::check()
devtools::check()
usethis::use_github_action("check-standard")
usethis::use_github_action("check-release")
usethis::use_github_action("test-coverage")
debugSource("C:/Custom R Packages/wrappr/R/iter_library.R")
source("C:/Custom R Packages/wrappr/R/iter_library.R")
args(library)
args(install.packages)
library(devtools)
devtools::check()
devtools::check()
source("C:/Custom R Packages/wrappr/R/iter_library.R")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
?iter_library
devtools::check()
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
View(a)
View(a)
a
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
args(read.csv)
elseif
ifelse
ifelse(TRUE, print(sum(1,2,3)), print("wrongs"))
ifelse(TRUE, print(sum(1,2,3)), print("wrongs"))
ifelse(FALSE, print(sum(1,2,3)), print("wrongs"))
a <- ifelse(FALSE, sum(1,2,3), print("wrongs"))
a
a
devtools::check()
devtools::check()
devtools::check()
library(devtools)
devtools::check()
inherits(sim)
inherits(sum)
inherits("sum")
is("sum")
is(sum)
is(sum) == "function"
is(sum)[0] == "function"
is(sum)[1] == "function"
devtools::check()
devtools::check()
devtools::check()
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
devtools::check()
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(devtools)
devtools::check()
devtools::test()
devtools::test()
inherits(sim)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
mean(1,2,3,4,7,8,9)
mean(c(1,2,3,4,7,8,9))
mean(1,2,3,4,7,8,9)
range(1,2,3)
range(1,2,3)[1]
devtools::test()
devtools::test()
devtools::test()
devtools::check()
deparse(sum)
deparse(function() {})
deparse(function() {})
deparse(substitute())
deparse(substitute(sum))
deparse(substitute(function() {}))
deparse(substitute(function() {}))[2]
paste0(deparse(substitute(function() {})))
paste0(deparse(substitute(function() {})))[1]
paste0(deparse(substitute(function() {})), collaps = "")
paste0(deparse(substitute(function() {})), collaps = "")
paste0(deparse(substitute(function() {})), collaps = "")[2]
a <- deparse(substitute(function() {}))
paste0(a, collapse = "")
paste0(deparse(substitute(function() {})), collapse = "")
args(warning)
devtools::test()
a <- sum
deparse(a)
deparse(a)[2]
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
class(c(c(1,2,3),c(2,3)))
c(c(1,2,3),c(2,3))
devtools::test()
unlist(c(1,2,3))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
a <- lazy_eval(1,2,3, .f = sum)
a()
a <- a(NA, return_new_closure = TRUE)
a()
a
a()
a(na.rm = TRUE)
a <- a(na.rm = TRUE, return_new_closure = TRUE)
a()
a
list(na.rm = TRUE)
unlist(list(na.rm = TRUE))
unlist(list(na.rm = TRUE, 1))
unlist(list(na.rm = TRUE, 1,2,3))
devtools::test()
is.list(list())
devtools::test()
devtools::test()
devtools::test()
sum(list(1,2,3))
devtools::test()
devtools::test()
unlist(list(1,"e", sum), recursive = FALSE)
devtools::test()
devtools::build()
a <- lazy_eval(1,2,3, sum)
a <- lazy_eval(1,2,3, .f = sum)
a()
a(NA, na.rm = TRUE)
a(NA, na.rm = TRUE)
a <- a(NA, na.rm = TRUE, return_new_closure = TRUE)
a()
a(na.rm = TRUE)
list(list(1))
b <- function(...) {print(is.list(...))}
b()
b(1)
b(list(1))
b <- function(...) {b <- ... b}
b <- function(...) {b <- ...}
b(1)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::check()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
expect_warning(warning("hello"))
expect_warning(warning("hello"))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
devtools::test()
args(install.packages)
devtools::check()
devtools::test()
devtools::test()
rownames(available.packages())
devtools::test()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library("writexl")
install.packages("writexl")
library(devtools)
devtools::test()
list()[[1]]
list()[[1]]
devtools::test()
sum(c(values_for_test, 3,4), na.rm = TRUE)
sum(c(c(1,2,3), 3,4), na.rm = TRUE)
sum(list(c(c(1,2,3), 3,4), na.rm = TRUE))
sum(unlist(list(c(c(1,2,3), 3,4), na.rm = TRUE)))
sum(unlist(list(c(c(1,2,3), 3,4), na.rm = TRUE)))
args(unlist)
sum(unlist(list(c(c(1,2,3), 3,4), na.rm = TRUE)), recursive = FALSE)
sum(unlist(list(c(c(1,2,3), 3,4), na.rm = TRUE)), recursive = TRUE)
sum(unlist(list(c(c(1,2,3), 3,4), na.rm = TRUE)), recursive = TRUE)
sum(unlist(list(c(c(1,2,3), 3,4), na.rm = TRUE), recursive = TRUE))
sum(unlist(list(c(c(1,2,3), 3,4), na.rm = TRUE), recursive = FALSE))
sum(unlist(list(c(c(1,2,3), 3,4), na.rm = TRUE), recursive = FALSE))
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
current_func_args
current_func_args[[1]]
do.call(func,current_func_args[[1]])
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
new_func_args
current_func_args
new_func_args
current_func_args
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
current_func_args
is.list(current_func_args[[1]]
)
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
current_func_args
new_func_args
new_func_args
current_func_args
current_func_args
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
new_func_args
current_func_args
do.call(func, current_func_args)
append(current_func_args, new_func_args)
do.call(sum,append(current_func_args, new_func_args))
do.call(sum,c(current_func_args, new_func_args))
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
current_func_args
list(current_func_args)
list(current_func_args)[[1]]
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
test_func()
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
current_func_args
length(new_func_args) > 0
current_func_args
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
current_func_args
current_func_args
unlist(current_func_args)
current_func_args[[1]]
devtools::test()
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
debugSource("C:/Custom R Packages/wrappr/R/lazy_eval.R")
devtools::test()
devtools::test()
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
source("C:/Custom R Packages/wrappr/R/lazy_eval.R")
devtools::test()
devtools::check()
devtools::check()
usethis::use_vignette("Practical ways to use wrappr")
usethis::use_vignette("Practical-ways-to-use-wrappr")
devtools::check()
devtools::load_all()
devtools::check()
tools::buildVignette()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
output_df
source("~/.active-rstudio-document")
devtools::check()
source("~/.active-rstudio-document")
devtools::check()
source("~/.active-rstudio-document")
devtools::check()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
df
source("~/.active-rstudio-document")
excel_file_loader(sheet = "another_sheet")
excel_file_loader
excel_file_loader()
excel_file_loader()
excel_file_loader(sheet = "another_sheet")
source("~/.active-rstudio-document")
excel_file_loader(sheet = "Sheet1")
names(list(a = 1))
list(a=2)[names(list(a = 1))]
for (i in c()) {print(i)}
for (i in c(1)) {print(i)}
for (i in c(1,2)) {print(i)}
a <- list(a = 2)
a[a]
a[[a]]
a[["a"]]
a[["a"]] <- 1
a[["a"]]
a[["a"]] <- NULL
a
devtools::check()
source("~/.active-rstudio-document")
df_another_sheet
df_another_sheet
df_another_sheet <- excel_file_loader(sheet = "another_sheet")
df_another_sheet
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
df_example_sheet
df_example_sheet <- wrappr::get_cache_or_create(
var = "df_example_sheet",
func = read_excel,
path = folder_path,
sheet = "Sheet1"
)
df_example_sheet
rm(df_example_sheet)
df_example_sheet <- wrappr::get_cache_or_create(
var = "df_example_sheet",
func = read_excel,
path = folder_path,
sheet = "Sheet1"
)
df_example_sheet
data <- wrappr::set_temp_wd(
temp_cwd = "C:/temp_excel",
func = read_excel,
path = "df_example.xlsx",
sheet = "Sheet1"
) %>%
wrappr::msg_wrap(
before_func_msg = "Loading the data",
after_func_msg = "The data has loaded..",
) %>%
wrappr::lazy_eval(.f = .)
source("~/.active-rstudio-document")
devtools::check()
devtools::check_mac_release()
devtools::check_win_release()
install.packages(c("brew", "bslib", "cachem", "colorspace", "commonmark", "cpp11", "crayon", "curl", "desc", "digest", "evaluate", "fansi", "fastmap", "forcats", "fs", "gdtools", "gert", "ggplot2", "gh", "gitcreds", "gtable", "highr", "hms", "httpuv", "httr", "hunspell", "isoband", "jsonlite", "later", "lubridate", "markdown", "officer", "openssl", "parsedate", "pkgbuild", "pkgload", "png", "processx", "profvis", "ps", "purrr", "Rcpp", "RcppTOML", "readxl", "reticulate", "rhub", "rmarkdown", "rstudioapi", "rversions", "rvg", "sass", "spelling", "stringi", "stringr", "sys", "testthat", "tinytex", "tzdb", "utf8", "viridisLite", "vroom", "waldo", "whisker", "xml2", "yaml", "zip"))
R.version
R.version
